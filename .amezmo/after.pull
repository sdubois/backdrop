#!/bin/bash

# Make sure we fail our deployment if this hook fails.
set -e;

# More commands executed here.
# Please see https://amezmo.com/docs/deployments/dependencies
# for a full example

# APPLICATION_ROOT is a default variable provided at hook execution time.
echo "Running after.pull from ${APPLICATION_ROOT} for release ${RELEASE_NUMBER}.";

# Create an active configuration directory if it does not yet exist.
# `active` should NOT be publically viewable, but should be writable by the webserver.
mkdir --parents "${PERSISTENT_STORAGE_DIRECTORY}/config/active" --mode=2770

# Create a staging configuration directory if it does not yet exist.
# `staging` should NOT be publically viewable, but should be writable by the webserver.
mkdir --parents "${PERSISTENT_STORAGE_DIRECTORY}/config/staging" --mode=2770

# Create a public files directory if it does not yet exist.
# `files` should be publically viewable, and should be writable by the webserver.
mkdir --parents "${PERSISTENT_STORAGE_DIRECTORY}/public/files" --mode=2775

# Delete existing `files` directory that may be included in the git source tree.
FILES_DIRECTORY="${APPLICATION_ROOT}/files";
if [ -d "$FILES_DIRECTORY" ]; then
    rm -rf "$FILES_DIRECTORY";
fi

# Create a symbolic link from the Backdrop public files directory location
# to the persistent storage location for files.
ln \
    --symbolic \
    --force \
    --no-dereference \
    "${PERSISTENT_STORAGE_DIRECTORY}/public/files" "${APPLICATION_ROOT}/files";


# Create a symbolic link to point the private Backdrop settings file
# to the persistent storage location.
#
# Local `settings.php` files should NOT be publically viewable, and should NOT
# be writable by the webserver.
ln \
    --symbolic \
    --force \
    --no-dereference \
    "${PERSISTENT_STORAGE_DIRECTORY}/settings.local.php" "${APPLICATION_ROOT}/settings.local.php";

